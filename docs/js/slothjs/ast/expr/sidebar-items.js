window.SIDEBAR_ITEMS = {"enum":[["BinOp","Lists all possible binary operation for [`BinaryExpression`]"],["BoolOp","Lists all boolean operations (`&&`, `||`) for [`LogicalExpression`]"],["Expr","The enumeration of every possible kind of JS expressions."],["ObjectKey","Describes an [`ObjectExpression`] key: `ObjectKey::Computed` or `ObjectKey::Identifier`"],["UnOp","Lists all unary operations for [`UnaryExpression`]"],["UpdOp","Lists all update operations (`++`, `--`) for [`UpdateExpression`]"]],"fn":[["add","make a [`BinaryExpression`] (`left`, [`BinOp::Plus`], `right`)"],["array","make an [`ArrayExpression`] (`vec![v1, v2, ...]`) (JS: `[v1, v2, ...]`)"],["binary","make a [`BinaryExpression`](`left`, `op`, `right`)"],["call","make a [`CallExpression`] with `callee` and `arguments` (JS: `callee(arguments...)`)"],["empty_array","make an empty [`ArrayExpression`], JS: `[]`"],["empty_object","make an empty [`ObjectExpression`] (JS: `{}`)"],["id","make an [`Identifier`] from `name` (JS: `name`)"],["index","make a computed  [`MemberExpression`](`object`, `attr`) (JS: `object[attr]`)"],["lit","make a [`Literal`] from `value`"],["memb","make a non-computed (i.e. `object.attr`) [`MemberExpression`](`object`, `attr`)"],["null","make a [`Literal`] (`JSON::Null`) (JS: `null`)."],["object","make a [`ObjectExpression`] (`vec![(k1, v1), ...]`) (JS: `{k1: v1, ...}`)"],["plus","make a [`UnaryExpression`]([`UnOp::Plus`], `expr`)"],["undefined","make an [`Identifier`] (`\"undefined\"`), (JS: `undefined`)"]],"struct":[["ArrayExpression",""],["AssignmentExpression",""],["BinaryExpression",""],["CallExpression",""],["ConditionalExpression",""],["Expression","`Expression` represents an [`Expr`] together with its source span, if any."],["Function","`Function` describes a JS function definition (`params`, `body`, etc)."],["FunctionExpression",""],["Identifier",""],["Literal",""],["LogicalExpression",""],["MemberExpression",""],["NewExpression",""],["ObjectExpression",""],["SequenceExpression",""],["UnaryExpression",""],["UpdateExpression",""]],"type":[["Pattern",""]]};