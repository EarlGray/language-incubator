(DUM LDC () LDF (() (LDC () READ CONS LDF ((inp) (LDC () LD inp CONS LD eof-object? AP SEL (STOP JOIN) (LDC () LDC () LDC (STOP) CONS LDC () LD inp CONS LD compile AP CONS LD append AP PRINT CONS LDC () LD repl AP CONS CAR JOIN) RTN)) AP RTN)) CONS LDF ((s) (LDC () LD s CONS LD symbol? AP SEL (LDC () LD s CONS LDC LD CONS LD list AP JOIN) (LDC () LD s CONS LD number? AP SEL (LDC () LD s CONS LDC LDC CONS LD list AP JOIN) (LDC () LD s CONS LD compile-form AP JOIN) JOIN) RTN)) CONS LDF ((f) (LDC () LD f CDR CONS LD f CAR CONS LDF ((hd tl) (LD hd LDC quote EQ SEL (LDC () LD tl CAR CONS LDC LDC CONS LD list AP JOIN) (LD hd LDC + EQ SEL (LDC () LDC (ADD) CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC - EQ SEL (LDC () LDC (SUB) CONS LDC () LD tl CAR CONS LD compile AP CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC * EQ SEL (LDC () LDC (MUL) CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC atom? EQ SEL (LDC () LDC (ATOM) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC car EQ SEL (LDC () LDC (CAR) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC cdr EQ SEL (LDC () LDC (CDR) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC cadr EQ SEL (LDC () LDC (CDR CAR) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC caddr EQ SEL (LDC () LDC (CDR CDR CAR) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC cons EQ SEL (LDC () LDC (CONS) CONS LDC () LD tl CAR CONS LD compile AP CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC eq? EQ SEL (LDC () LDC (EQ) CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC if EQ SEL (LDC () LDC () LDC (JOIN) CONS LDC () LD tl CDR CDR CAR CONS LD compile AP CONS LD append AP CONS LDC () LDC (JOIN) CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LD append AP CONS LDC () LD tl CAR CONS LD compile AP CONS LDF ((condc thenb elseb) (LDC () LDC () LD elseb CONS LD list AP CONS LDC () LD thenb CONS LD list AP CONS LDC (SEL) CONS LD condc CONS LD append AP RTN)) AP JOIN) (LD hd LDC lambda EQ SEL (LDC () LDC () LDC (RTN) CONS LDC () LD tl CDR CAR CONS LD compile AP CONS LD append AP CONS LD tl CAR CONS LDF ((args body) (LDC () LDC () LD body CONS LD args CONS LD list AP CONS LDC LDF CONS LD list AP RTN)) AP JOIN) (LD hd LDC let EQ SEL (LDC () LD tl CDR CAR CONS LDC () LD tl CAR CONS LD unzip AP CONS LDF ((bindings body) (LDC () LD bindings CDR CAR CONS LD bindings CAR CONS LDF ((args exprs) (LDC () LDC (AP) CONS LDC () LDC () LDC () LDC (RTN) CONS LDC () LD body CONS LD compile AP CONS LD append AP CONS LD args CONS LD list AP CONS LDC LDF CONS LD list AP CONS LDC () LD exprs CONS LD compile-bindings AP CONS LD append AP RTN)) AP RTN)) AP JOIN) (LD hd LDC letrec EQ SEL (LDC () LD tl CDR CAR CONS LDC () LD tl CAR CONS LD unzip AP CONS LDF ((bindings body) (LDC () LD bindings CDR CAR CONS LD bindings CAR CONS LDF ((args exprs) (LDC () LDC (RAP) CONS LDC () LDC () LDC () LDC (RTN) CONS LDC () LD body CONS LD compile AP CONS LD append AP CONS LD args CONS LD list AP CONS LDC LDF CONS LD list AP CONS LDC () LD exprs CONS LD compile-bindings AP CONS LDC (DUM) CONS LD append AP RTN)) AP RTN)) AP JOIN) (LD hd LDC begin EQ SEL (LDC () LDC (LDC ()) CONS LD tl CONS LD compile-begin-acc AP JOIN) (LD hd LDC cond EQ SEL (LDC () LD tl CONS LD compile-cond AP JOIN) (LD hd LDC display EQ SEL (LDC () LDC (PRINT) CONS LDC () LD tl CAR CONS LD compile AP CONS LD append AP JOIN) (LD hd LDC read EQ SEL (LDC (READ) JOIN) (LD hd LDC quit EQ SEL (LDC (STOP) JOIN) (LDC () LDC () LDC AP CONS LD hd CONS LDC LD CONS LD list AP CONS LDC () LD tl CONS LD compile-bindings AP CONS LD append AP JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) JOIN) RTN)) AP RTN)) CONS LDF ((conds) (LDC () LD conds CONS LD null? AP SEL (LDC (LDC ()) JOIN) (LDC () LD conds CAR CDR CAR CONS LD conds CAR CAR CONS LDF ((this-cond this-expr) (LD this-cond LDC else EQ SEL (LDC () LD this-expr CONS LD compile AP JOIN) (LDC () LDC () LDC () LDC (JOIN) CONS LDC () LD conds CDR CONS LD compile-cond AP CONS LD append AP CONS LD list AP CONS LDC () LDC () LDC (JOIN) CONS LDC () LD this-expr CONS LD compile AP CONS LD append AP CONS LD list AP CONS LDC (SEL) CONS LDC () LD this-cond CONS LD compile AP CONS LD append AP JOIN) RTN)) AP JOIN) RTN)) CONS LDF ((stmts acc) (LDC () LD stmts CONS LD null? AP SEL (LDC () LDC (CAR) CONS LD acc CONS LD append AP JOIN) (LDC () LDC () LDC (CONS) CONS LDC () LD stmts CAR CONS LD compile AP CONS LD acc CONS LD append AP CONS LD stmts CDR CONS LD compile-begin-acc AP JOIN) RTN)) CONS LDF ((bs) (LDC () LD bs CONS LD null? AP SEL (LDC (LDC ()) JOIN) (LDC () LDC (CONS) CONS LDC () LD bs CAR CONS LD compile AP CONS LDC () LD bs CDR CONS LD compile-bindings AP CONS LD append AP JOIN) RTN)) CONS LDF ((ps) (DUM LDC () LDF ((pairs z1 z2) (LDC () LD pairs CONS LD null? AP SEL (LDC () LD z2 CONS LD z1 CONS LD list AP JOIN) (LDC () LD pairs CDR CONS LD pairs CAR CONS LDF ((pair rest) (LDC () LD pair CDR CAR CONS LD pair CAR CONS LDF ((p1 p2) (LDC () LDC () LDC () LD p2 CONS LD list AP CONS LD z2 CONS LD append AP CONS LDC () LDC () LD p1 CONS LD list AP CONS LD z1 CONS LD append AP CONS LD rest CONS LD unzipt AP RTN)) AP RTN)) AP JOIN) RTN)) CONS LDF ((unzipt) (LDC () LDC () CONS LDC () CONS LD ps CONS LD unzipt AP RTN)) RAP RTN)) CONS LDF ((unzip compile-bindings compile-begin-acc compile-cond compile-form compile repl) (LDC () LD repl AP RTN)) RAP STOP)